/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package br.com.aluguel.ferramentasaluguel.view;

import br.com.aluguel.ferramentasaluguel.dao.FerramentaDAO;
import br.com.aluguel.ferramentasaluguel.model.Ferramentas;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author danie
 */
public class telaListaFerramentas extends javax.swing.JFrame {

    
    public static telaListaFerramentas instanciaAtual;
    /**
     * Creates new form telaListaFerramentas
     */
    public telaListaFerramentas() {
         instanciaAtual = this;
        initComponents();
        setLocationRelativeTo(null);
        
        FerramentaDAO dao = new FerramentaDAO();
        List<Ferramentas> lista = dao.listar("");
        preencherTabela(lista);
        
    }
    
    
    public void preencherTabela(List<Ferramentas> ferramentas) {
        String colunas[] = {"ID", "Nome", "Preço", "Categoria", "Disponivel", "Descrição"};
        String dados[][] = new String[ferramentas.size()][colunas.length];

        int i = 0;

        for (Ferramentas f : ferramentas) {
            dados[i] = new String[]{
                String.valueOf(f.getId()),
                f.getNome(),
                String.valueOf(f.getPreco_diaria()),
                f.getCategoria(),
                String.valueOf(f.isDisponivel()),
                f.getDescricao()
            };
            i++;
        }
        DefaultTableModel tabelaClientes = new DefaultTableModel(dados, colunas);
        tabela.setModel(tabelaClientes);
    }
    
    public void atualizarTabelaFerramentas() {

        FerramentaDAO dao = new FerramentaDAO();
        List<Ferramentas> listar = dao.listar("");
        DefaultTableModel model = (DefaultTableModel) tabela.getModel();

        System.out.println("Total de clientes: " + listar.size()); // Depuração

        for (Ferramentas f : listar) {
            model.addRow(new Object[]{
                String.valueOf(f.getId()),
                f.getNome(),
                String.valueOf(f.getPreco_diaria()),
                f.getCategoria(),
                String.valueOf(f.isDisponivel()),
                f.getDescricao()
            });
        }
    }
    
    
    /**
     * Função que preencher a tabela com base no nome pesquisado
     */
    public void PreencherTabelaNome(String nome) {
        try {
           FerramentaDAO dao = new FerramentaDAO();
            List<Ferramentas> listar =  dao.listar(nome);
            System.out.println("Total de ferramentas " + listar.size()); // Adicione isso para depuração

            if (nome.equals("")) {
                JOptionPane.showMessageDialog(null, "Escreva um nome para pesquisar");
                return; // Retorna se a lista estiver vazia
            }
            if (listar == null || listar.isEmpty()) {
                JOptionPane.showMessageDialog(null, "Nenhuma ferramenta encontrado com o nome: " + nome);
                return; // Retorna se a lista estiver vazia
            }

            preencherTabela(listar);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao buscar ferramenta: " + e.getMessage());
        }
    }


    /*
    * Função para limpar a tabela quando algum objeto é editado ou excluido
     */
    public void limparTabela() {
        DefaultTableModel model = (DefaultTableModel) tabela.getModel();
        if (model.getRowCount() > 0) { // Evita erro se a tabela já estiver vazia
            model.setRowCount(0);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        txtNome = new javax.swing.JTextField();
        btaPesquisar = new javax.swing.JButton();
        btaEditar = new javax.swing.JButton();
        btaExcluir = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabela = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Lista de Ferramentas");

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));

        txtNome.setBackground(new java.awt.Color(255, 255, 255));
        txtNome.setForeground(new java.awt.Color(0, 0, 0));

        btaPesquisar.setText("Pesquisar");
        btaPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btaPesquisarActionPerformed(evt);
            }
        });

        btaEditar.setBackground(new java.awt.Color(255, 255, 102));
        btaEditar.setForeground(new java.awt.Color(0, 0, 0));
        btaEditar.setText("Editar");
        btaEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btaEditarActionPerformed(evt);
            }
        });

        btaExcluir.setBackground(new java.awt.Color(255, 0, 0));
        btaExcluir.setForeground(new java.awt.Color(0, 0, 0));
        btaExcluir.setText("Excluir");
        btaExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btaExcluirActionPerformed(evt);
            }
        });

        tabela.setBackground(new java.awt.Color(255, 255, 255));
        tabela.setForeground(new java.awt.Color(0, 0, 0));
        tabela.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tabela);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(342, Short.MAX_VALUE)
                .addComponent(btaExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btaEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btaPesquisar)
                .addGap(21, 21, 21)
                .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btaEditar)
                    .addComponent(btaPesquisar)
                    .addComponent(btaExcluir))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 392, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btaEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btaEditarActionPerformed
          int selectLinha = tabela.getSelectedRow();
        if (selectLinha != -1) {
            DefaultTableModel modeloTabela = (DefaultTableModel) tabela.getModel();

            String idferramenta = (String) tabela.getValueAt(selectLinha, 0);
            int id = Integer.parseInt(idferramenta); // Converte String do id para INT

            FerramentaDAO dao = new FerramentaDAO();
            Ferramentas ferramentaExiste = dao.buscarPorId(id);

            if (ferramentaExiste != null) {
                telaEditarFerramenta editar = new telaEditarFerramenta(id);
                editar.setVisible(true);
            } else {
                JOptionPane.showMessageDialog(this, "Erro ao buscar  a ferramenta.", "Erro", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Nenhuma linha selecionada.", "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btaEditarActionPerformed

    private void btaExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btaExcluirActionPerformed

        int selectLinha = tabela.getSelectedRow();

        //verificar se linha foi selecionada 
        if (selectLinha != -1) {

            String idFerramentas = (String) tabela.getValueAt(selectLinha, 0);
            int id = Integer.parseInt(idFerramentas); // converte String do id para INT

            FerramentaDAO dao = new FerramentaDAO();
            Ferramentas ferramentas = dao.buscarPorId(id);

            if (ferramentas != null) {
                // Exclui o podcast do banco de dados
                dao.excluirFerramenta(ferramentas);
                limparTabela();
                atualizarTabelaFerramentas();

                JOptionPane.showMessageDialog(this, "Ferramenta excluído com sucesso!");

            } else {
                JOptionPane.showMessageDialog(this, "Selecione uma linha para excluir.", "Erro", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            // Mensagem de erro caso nenhuma linha esteja selecionada
            JOptionPane.showMessageDialog(this, "Nenhuma linha selecionada.", "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btaExcluirActionPerformed

    private void btaPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btaPesquisarActionPerformed
        String nomePesquisa = txtNome.getText();    
        PreencherTabelaNome(nomePesquisa);
    }//GEN-LAST:event_btaPesquisarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(telaListaFerramentas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(telaListaFerramentas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(telaListaFerramentas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(telaListaFerramentas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new telaListaFerramentas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btaEditar;
    private javax.swing.JButton btaExcluir;
    private javax.swing.JButton btaPesquisar;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabela;
    private javax.swing.JTextField txtNome;
    // End of variables declaration//GEN-END:variables
}
